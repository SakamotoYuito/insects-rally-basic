[{"/Users/sakamotoyuito/work/insects_rally/src/components/Header/index.tsx":"1","/Users/sakamotoyuito/work/insects_rally/src/pages/_app.tsx":"2","/Users/sakamotoyuito/work/insects_rally/src/pages/api/hello.ts":"3","/Users/sakamotoyuito/work/insects_rally/src/pages/index.tsx":"4","/Users/sakamotoyuito/work/insects_rally/src/assets/icon/Footer/CameraIcon.tsx":"5","/Users/sakamotoyuito/work/insects_rally/src/assets/icon/Footer/HomeIcon.tsx":"6","/Users/sakamotoyuito/work/insects_rally/src/assets/icon/Footer/PictureIcon.tsx":"7","/Users/sakamotoyuito/work/insects_rally/src/assets/icon/Footer/SearchIcon.tsx":"8","/Users/sakamotoyuito/work/insects_rally/src/components/Card/PictureCard/index.tsx":"9","/Users/sakamotoyuito/work/insects_rally/src/components/Card/index.tsx":"10","/Users/sakamotoyuito/work/insects_rally/src/components/Chart/index.tsx":"11","/Users/sakamotoyuito/work/insects_rally/src/components/Footer/index.tsx":"12","/Users/sakamotoyuito/work/insects_rally/src/components/Form/RadioForm/index.tsx":"13","/Users/sakamotoyuito/work/insects_rally/src/components/Form/TextForm/index.tsx":"14","/Users/sakamotoyuito/work/insects_rally/src/components/Header/loginObserver.tsx":"15","/Users/sakamotoyuito/work/insects_rally/src/components/List/SearchList/index.tsx":"16","/Users/sakamotoyuito/work/insects_rally/src/components/List/index.tsx":"17","/Users/sakamotoyuito/work/insects_rally/src/components/Toast/index.tsx":"18","/Users/sakamotoyuito/work/insects_rally/src/pages/camera/index.tsx":"19","/Users/sakamotoyuito/work/insects_rally/src/pages/layout.tsx":"20","/Users/sakamotoyuito/work/insects_rally/src/pages/login/index.tsx":"21","/Users/sakamotoyuito/work/insects_rally/src/pages/picture/index.tsx":"22","/Users/sakamotoyuito/work/insects_rally/src/pages/quiz/hook.ts":"23","/Users/sakamotoyuito/work/insects_rally/src/pages/quiz/index.tsx":"24","/Users/sakamotoyuito/work/insects_rally/src/pages/search/index.tsx":"25","/Users/sakamotoyuito/work/insects_rally/src/pages/signup/index.tsx":"26","/Users/sakamotoyuito/work/insects_rally/src/utils/firebase/firebase.ts":"27"},{"size":1448,"mtime":1662447753980,"results":"28","hashOfConfig":"29"},{"size":391,"mtime":1662447755814,"results":"30","hashOfConfig":"29"},{"size":307,"mtime":1662266962955,"results":"31","hashOfConfig":"29"},{"size":402,"mtime":1662950042059,"results":"32","hashOfConfig":"29"},{"size":3904,"mtime":1663138455665,"results":"33","hashOfConfig":"29"},{"size":3474,"mtime":1663138468807,"results":"34","hashOfConfig":"29"},{"size":6905,"mtime":1663138488271,"results":"35","hashOfConfig":"29"},{"size":4122,"mtime":1663138502492,"results":"36","hashOfConfig":"29"},{"size":2134,"mtime":1662970153656,"results":"37","hashOfConfig":"29"},{"size":1220,"mtime":1663056258448,"results":"38","hashOfConfig":"29"},{"size":944,"mtime":1662948054478,"results":"39","hashOfConfig":"29"},{"size":1539,"mtime":1662955710294,"results":"40","hashOfConfig":"29"},{"size":1110,"mtime":1663058795568,"results":"41","hashOfConfig":"29"},{"size":1177,"mtime":1663138098311,"results":"42","hashOfConfig":"29"},{"size":1167,"mtime":1662436819818,"results":"43","hashOfConfig":"29"},{"size":333,"mtime":1662972080673,"results":"44","hashOfConfig":"29"},{"size":1607,"mtime":1662973154881,"results":"45","hashOfConfig":"29"},{"size":1395,"mtime":1662966679546,"results":"46","hashOfConfig":"29"},{"size":168,"mtime":1663137941377,"results":"47","hashOfConfig":"29"},{"size":452,"mtime":1662949890450,"results":"48","hashOfConfig":"29"},{"size":1234,"mtime":1663137790510,"results":"49","hashOfConfig":"29"},{"size":2098,"mtime":1662967960157,"results":"50","hashOfConfig":"29"},{"size":253,"mtime":1663138568140,"results":"51","hashOfConfig":"29"},{"size":3172,"mtime":1663138587079,"results":"52","hashOfConfig":"29"},{"size":744,"mtime":1662971915361,"results":"53","hashOfConfig":"29"},{"size":1053,"mtime":1663137826877,"results":"54","hashOfConfig":"29"},{"size":2346,"mtime":1662442638180,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"134vf20",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sakamotoyuito/work/insects_rally/src/components/Header/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/pages/_app.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/pages/api/hello.ts",[],[],"/Users/sakamotoyuito/work/insects_rally/src/pages/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/assets/icon/Footer/CameraIcon.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/assets/icon/Footer/HomeIcon.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/assets/icon/Footer/PictureIcon.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/assets/icon/Footer/SearchIcon.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/components/Card/PictureCard/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/components/Card/index.tsx",["141","142"],[],"import { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { InsectsInfo } from \"./PictureCard\";\nimport styles from \"./style.module.scss\";\nimport MyToast from \"components/Toast\";\n\ntype Props = {\n  info: InsectsInfo;\n};\n\nconst CardComponent = (props: Props) => {\n  const [isToastShow, setIsToastShow] = useState(false);\n  const appearToast = () => {\n    setIsToastShow(!isToastShow);\n  };\n\n  return (\n    <>\n      <Card className={styles.card} onClick={() => appearToast()}>\n        <Card.Header>{props.info.name}</Card.Header>\n        <img src={props.info.image} />\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <Badge className={styles.badge} pill bg=\"primary\">\n              性別\n            </Badge>\n            {props.info.gender}\n          </ListGroup.Item>\n        </ListGroup>\n      </Card>\n      <MyToast\n        title={props.info.name}\n        small={props.info.gender}\n        image={props.info.image}\n        explain={props.info.explain}\n        isShow={isToastShow}\n        onClose={() => appearToast()}\n      />\n    </>\n  );\n};\n\nexport default CardComponent;\n","/Users/sakamotoyuito/work/insects_rally/src/components/Chart/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/components/Footer/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/components/Form/RadioForm/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/components/Form/TextForm/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/components/Header/loginObserver.tsx",["143"],[],"import {\n  ReactNode,\n  createContext,\n  useState,\n  useContext,\n  useEffect,\n} from \"react\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport type { User } from \"firebase/auth\";\nimport { useRouter } from \"next/router\";\n\nexport type UserType = User | null;\n\nexport type AuthContextProps = {\n  user: UserType;\n};\n\nexport type AuthProps = {\n  children: ReactNode;\n};\n\nconst AuthContext = createContext<Partial<AuthContextProps>>({});\n\nexport const useAuthContext = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }: AuthProps) => {\n  const router = useRouter();\n  const auth = getAuth();\n  const [user, setUser] = useState<UserType>(null);\n  const isAvailableForViewing =\n    router.pathname === \"/login\" || router.pathname === \"/signup\";\n  const value = {\n    user,\n  };\n\n  useEffect(() => {\n    const authStateChanged = onAuthStateChanged(auth, async (user) => {\n      setUser(user);\n      !user && !isAvailableForViewing && (await router.push(\"/login\"));\n    });\n    return () => {\n      authStateChanged();\n    };\n  }, []);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n","/Users/sakamotoyuito/work/insects_rally/src/components/List/SearchList/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/components/List/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/components/Toast/index.tsx",["144","145"],[],"import Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport { InsectsInfo } from \"components/Card/PictureCard\";\nimport styles from \"./style.module.scss\";\nimport Image from \"next/image\";\nimport { Button } from \"react-bootstrap\";\nimport kamakiri from \"assets/img/kamakiri.jpg\";\n\ninterface Props {\n  title: string;\n  explain: string;\n  isShow: boolean;\n  onClose(): void;\n  small?: string;\n  image?: string;\n  button?: string;\n  buttonClick?(): void;\n}\n\nconst MyToast = (props: Props) => {\n  return (\n    <ToastContainer className={styles.container}>\n      <Toast\n        className={styles.toastBody}\n        show={props.isShow}\n        onClose={() => props.onClose()}\n      >\n        <Toast.Header>\n          <strong className=\"me-auto\">{props.title}</strong>\n          {props.small !== undefined ? <small>{props.small}</small> : null}\n        </Toast.Header>\n        <Toast.Body>\n          <div>\n            {props.image !== undefined ? (\n              <img className={styles.image} src={props.image} />\n            ) : null}\n            <p>{props.explain}</p>\n            {props.button !== undefined && props.buttonClick !== undefined ? (\n              <Button onClick={props.buttonClick}>{props.button}</Button>\n            ) : null}\n          </div>\n        </Toast.Body>\n      </Toast>\n    </ToastContainer>\n  );\n};\n\nexport default MyToast;\n","/Users/sakamotoyuito/work/insects_rally/src/pages/camera/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/pages/layout.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/pages/login/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/pages/picture/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/pages/quiz/hook.ts",[],[],"/Users/sakamotoyuito/work/insects_rally/src/pages/quiz/index.tsx",["146","147"],[],"import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Image from \"next/image\";\nimport Layout from \"pages/layout\";\nimport MyRadioForm from \"components/Form/RadioForm\";\nimport MyTextForm from \"components/Form/TextForm\";\nimport useGetQuiz from \"./hook\";\nimport Check from \"assets/icon/check.svg\";\nimport Cross from \"assets/icon/cross.svg\";\nimport styles from \"./style.module.scss\";\n\nconst Quiz = () => {\n  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [userAnswer, setUserAnswer] = useState<string | number>(\"\");\n\n  const router = useRouter();\n  const quizNumber = router.query.id;\n  const type = \"Radio\";\n  const sentence = useGetQuiz();\n  const labels = [\"オス\", \"メス\"];\n  const buttonStr = \"回答する\";\n  const correctNumber = 1;\n  const correctAnswer = labels[correctNumber - 1];\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    const form = e.currentTarget;\n    e.preventDefault();\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    setValidated(true);\n    setIsAnswered(true);\n    correctAnswer === userAnswer ? setIsCorrect(true) : setIsCorrect(false);\n  };\n\n  return (\n    <Layout>\n      <div className={styles.title}>\n        <h1>問題{quizNumber}</h1>\n        <div className={styles.clearMark}>\n          {isCorrect === true && isAnswered === true && <Image src={Check} />}\n          {isCorrect === false && isAnswered === true && <Image src={Cross} />}\n        </div>\n      </div>\n      <p className={styles.sentence}>{sentence}</p>\n      {type === \"Radio\" && isCorrect === null && isAnswered === false && (\n        <MyRadioForm\n          labels={labels}\n          buttonStr={buttonStr}\n          onSubmit={(e) => handleSubmit(e)}\n          answer={userAnswer}\n          onChange={(e) => setUserAnswer(e.currentTarget.value)}\n        />\n      )}\n      {type !== \"Radio\" && isCorrect === null && isAnswered === false && (\n        <MyTextForm\n          validated={validated}\n          label=\"ユーザーID\"\n          type=\"text\"\n          placeHolder=\"ユーザーID\"\n          feedback=\"ユーザーIDを入力してください\"\n          onSubmit={(e) => {\n            e !== undefined ? handleSubmit(e) : null;\n          }}\n          onChange={(e) => {\n            e !== undefined ? setUserAnswer(e.currentTarget.value) : null;\n          }}\n          buttonStr=\"ログイン\"\n          error=\"もう一度入力してください\"\n        />\n      )}\n      {isCorrect === true && isAnswered === true && (\n        <div className={styles.correct}>\n          <p className={styles.announce}>正解です</p>\n          <h2 className={styles.answer}>正解：{correctAnswer}</h2>\n        </div>\n      )}\n      {isCorrect === false && isAnswered === true && (\n        <div className={styles.incorrect}>\n          <p className={styles.announce}>ざんねん…不正解です…</p>\n          <h2 className={styles.answer}>正解：{correctAnswer}</h2>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default Quiz;\n","/Users/sakamotoyuito/work/insects_rally/src/pages/search/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/pages/signup/index.tsx",[],[],"/Users/sakamotoyuito/work/insects_rally/src/utils/firebase/firebase.ts",[],[],{"ruleId":"148","severity":1,"message":"149","line":23,"column":9,"nodeType":"150","endLine":23,"endColumn":39},{"ruleId":"151","severity":1,"message":"152","line":23,"column":9,"nodeType":"150","endLine":23,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":46,"column":6,"nodeType":"155","endLine":46,"endColumn":8,"suggestions":"156"},{"ruleId":"148","severity":1,"message":"149","line":35,"column":15,"nodeType":"150","endLine":35,"endColumn":65},{"ruleId":"151","severity":1,"message":"152","line":35,"column":15,"nodeType":"150","endLine":35,"endColumn":65},{"ruleId":"151","severity":1,"message":"157","line":44,"column":57,"nodeType":"150","endLine":44,"endColumn":78},{"ruleId":"151","severity":1,"message":"157","line":45,"column":58,"nodeType":"150","endLine":45,"endColumn":79},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth', 'isAvailableForViewing', and 'router'. Either include them or remove the dependency array.","ArrayExpression",["158"],"Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"159","fix":"160"},"Update the dependencies array to be: [auth, isAvailableForViewing, router]",{"range":"161","text":"162"},[1078,1080],"[auth, isAvailableForViewing, router]"]